/* File generated by enesim_generator, don't modify it */
#ifndef SURFACE_ARGB8888_CORE_H_
#define SURFACE_ARGB8888_CORE_H_
static inline void argb8888_to_argb(unsigned int *argb, unsigned int plane0)
{
	*argb = ((plane0 & 0xff) << 0) | ((plane0 & 0xff00) << 0) | ((plane0 & 0xff0000) << 0) | ((plane0 & 0xff000000) << 0);
}
static inline void argb8888_from_argb(unsigned int argb, unsigned int *plane0)
{
	*plane0 = argb; 
}
static inline void argb8888_data_copy(Enesim_Surface_Data *s, Enesim_Surface_Data *d)
{
	d->argb8888.plane0 = s->argb8888.plane0;
}
static inline void argb8888_data_increment(Enesim_Surface_Data *d, unsigned int len)
{
	d->argb8888.plane0 += len;
}
static inline void argb8888_data_offset(Enesim_Surface_Data *s, Enesim_Surface_Data *d, unsigned int offset)
{
	d->argb8888.plane0 = s->argb8888.plane0 + offset;
}
static inline unsigned char argb8888_data_alpha_get(Enesim_Surface_Data *d)
{
	return (*d->argb8888.plane0 >> 24) & 0xff;
}
#endif
